{"version":3,"file":"chat_history.d.ts","names":["Collection","Document","MongoDBDocument","BaseListChatMessageHistory","BaseMessage","MongoDBChatMessageHistoryInput","MongoDBChatMessageHistory","collection","sessionId","Promise"],"sources":["../src/chat_history.d.ts"],"sourcesContent":["import { Collection, Document as MongoDBDocument } from \"mongodb\";\nimport { BaseListChatMessageHistory } from \"@langchain/core/chat_history\";\nimport { BaseMessage } from \"@langchain/core/messages\";\nexport interface MongoDBChatMessageHistoryInput {\n    collection: Collection<MongoDBDocument>;\n    sessionId: string;\n}\n/**\n * @example\n * ```typescript\n * const chatHistory = new MongoDBChatMessageHistory({\n *   collection: myCollection,\n *   sessionId: 'unique-session-id',\n * });\n * const messages = await chatHistory.getMessages();\n * await chatHistory.clear();\n * ```\n */\nexport declare class MongoDBChatMessageHistory extends BaseListChatMessageHistory {\n    lc_namespace: string[];\n    private collection;\n    private sessionId;\n    private idKey;\n    constructor({ collection, sessionId }: MongoDBChatMessageHistoryInput);\n    getMessages(): Promise<BaseMessage[]>;\n    addMessage(message: BaseMessage): Promise<void>;\n    clear(): Promise<void>;\n}\n"],"mappings":";;;;;UAGiBK,8BAAAA;cACDL,WAAWE;EADVG,SAAAA,EAAAA,MAAAA;;;;AACS;AAc1B;;;;;;;;AAOsCI,cAPjBH,yBAAAA,SAAkCH,0BAAAA,CAOjBM;EAAO,YAChCA,EAAAA,MAAAA,EAAAA;EAAO,QARmCN,UAAAA;EAA0B,QAAA,SAAA;;;;;KAKtCE;iBACxBI,QAAQL;sBACHA,cAAcK;WACzBA"}